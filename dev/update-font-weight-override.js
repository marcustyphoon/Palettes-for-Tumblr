import fs from 'node:fs/promises';
import cssParser from 'css';

try {
  const fontWeight350Rules = [];
  const fontWeight350MediaRules = {};

  const sw = await fetch('https://www.tumblr.com/sw.js').then((result) => result.text());
  const urls = sw.match(/https:\/\/assets\.tumblr\.com\/pop\/[a-z0-9-]+\.css/g);
  for (const url of urls) {
    console.log('downloading', url);
    const cssText = await fetch(url).then((response) => response.text());

    const ast = cssParser.parse(cssText);

    fontWeight350Rules.push(...ast.stylesheet.rules.filter(
      ({ type, declarations }) =>
        type === 'rule' &&
        declarations.find(({ property, value }) => property === 'font-family' && value === 'var(--font-family-modern)') &&
        declarations.find(({ property, value }) => property === 'font-weight' && value === '350')
    ));

    ast.stylesheet.rules
      .filter((rule) => rule.type === 'media')
      .forEach((mediaRule) => {
        const rules = mediaRule.rules.filter(
          ({ type, declarations }) =>
            type === 'rule' &&
            declarations.find(({ property, value }) => property === 'font-family' && value === 'var(--font-family-modern)') &&
            declarations.find(({ property, value }) => property === 'font-weight' && value === '350')
        );
        if (rules.length) {
          fontWeight350MediaRules[mediaRule.media] ??= [];
          fontWeight350MediaRules[mediaRule.media].push(...rules);
        }
      });
  }

  const selectorSets = [...new Set(fontWeight350Rules.map(({ selectors }) => selectors.join(', ')))];

  const override = `/*
Tumblr uses an unusual font weight of 350 on most --font-family-modern (Favorit Modern)
text, which may result in thin text when overriding the --font-family-modern variable.

This file is automatically generated by dev/update-font-weight-override.js and contains
the selectors of all native Tumblr rules which set font-family: var(--font-family-modern)
and font-weight: 350.
*/
${selectorSets.join(',\n')} {
  font-weight: normal;
}
${Object.entries(fontWeight350MediaRules).map(([key, value]) => {
  const selectorSets = [...new Set(value.map(({ selectors }) => selectors.join(', ')))];
  return `@media ${key} {
  ${selectorSets.join(',\n  ')} {
    font-weight: normal;
  }
}`;
}).join('\n')}
`;

  await fs.writeFile('src/fontWeightOverride.css', override, { encoding: 'utf8', flag: 'w+' });
  console.log(`wrote ${selectorSets.length} selector sets`);
} catch (e) {
  console.log(e);
}
